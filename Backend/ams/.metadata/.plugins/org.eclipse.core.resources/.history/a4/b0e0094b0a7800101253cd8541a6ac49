package com.cognizant.ams.Model.DAO.ServiceImpl;

import com.cognizant.ams.Model.BAO.StudentRegistrationDTO;
import com.cognizant.ams.Model.BAO.StudentRegisterResponse;
import com.cognizant.ams.Model.DAO.Services.StudentRegistrationService;
import com.cognizant.ams.Model.POJO.*;
import com.cognizant.ams.Model.Repositories.CourseMasterRepository;
import com.cognizant.ams.Model.Repositories.StudentRegistrationRepository;
import jakarta.persistence.EntityNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import java.time.LocalDate;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

@Service
public class StudentRegistrationServiceImpl implements StudentRegistrationService {

    @Autowired
    private StudentRegistrationRepository studentRepo;

    @Autowired
    private CourseMasterRepository courseRepo;

    @Autowired
    private PasswordEncoder passwordEncoder;

    @Override
    public StudentRegisterResponse registerStudent(StudentRegistrationDTO dto) {
        CourseMaster course = courseRepo.findById(dto.getCourseID())
                .orElseThrow(() -> new EntityNotFoundException("Course not found with ID: " + dto.getCourseID()));

        String studentId = "STU-" + UUID.randomUUID().toString().substring(0, 6).toUpperCase();

        UserLogin newUser = new UserLogin();
        newUser.setUserID(studentId);
        newUser.setUsername(dto.getEmail());
        newUser.setPassword(passwordEncoder.encode("defaultPass123"));
        newUser.setRole("Student");

        StudentRegistration student = new StudentRegistration();
        student.setStudentID(studentId);
        student.setFirstName(dto.getFirstName());
        student.setLastName(dto.getLastName());
        student.setGender(dto.getGender());
        student.setDob(dto.getDob());
        student.setEmail(dto.getEmail());
        student.setContactNumber(dto.getContactNumber());
        student.setAddress(dto.getAddress());
        student.setApplicationDate(LocalDate.now());
        student.setCourse(course);
        student.setUserLogin(newUser);

        // --- EE CODE CORRECT GA UNDALI ---
        // Kotha status ni create chesi, student ki link cheyadam
        AdmissionStatus status = new AdmissionStatus();
        status.setStudentID(studentId);
        status.setStudentRegistration(student);
        status.setCourse(course);
        status.setStatus("Pending");
        student.setAdmissionStatus(status);

        // Student ni save cheste, status kuda automatically save avutundi
        studentRepo.save(student);

        return new StudentRegisterResponse(studentId, dto.getEmail(), "defaultPass123");
    }

    // ... migata methods ...
}